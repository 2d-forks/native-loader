name: CI

on:
  push:
    branches: '*'
    tags: '*'
  pull_request:

jobs:
  mac-natives:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache natives
        uses: actions/cache@v2
        id: cache-natives
        with:
          path: |
            src/main/resources/natives/darwin
          key: mac-${{ hashFiles('feature-detector/**') }}
      - name: Set up JDK
        uses: actions/setup-java@v1
        if: steps.cache-natives.outputs.cache-hit != 'true'
        with:
          java-version: 17
      - name: Build natives
        if: steps.cache-natives.outputs.cache-hit != 'true'
        run: |
          chmod +x gradlew
          ./gradlew buildDarwin
      - uses: actions/upload-artifact@v2
        with:
          name: mac-natives
          path: src/main/resources/natives/*
  linux-natives:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache natives
        uses: actions/cache@v2
        id: cache-natives
        with:
          path: |
            src/main/resources/natives/linux-x86
            src/main/resources/natives/linux-x86-64
            src/main/resources/natives/linux-musl-x86-64
            src/main/resources/natives/linux-arm
            src/main/resources/natives/linux-aarch64
            src/main/resources/natives/linux-musl-aarch64
          key: linux-${{ hashFiles('feature-detector/**') }}
      - name: Set up JDK
        uses: actions/setup-java@v1
        if: steps.cache-natives.outputs.cache-hit != 'true'
        with:
          java-version: 17
      - name: Install x86 compilers
        if: steps.cache-natives.outputs.cache-hit != 'true'
        run: |
          sudo apt update
          sudo apt install libc6-dev-i386 linux-libc-dev g++-multilib
          curl -sL https://github.com/natanbc/actions-binaries/releases/download/1/x86_64-linux-musl-cross.tgz -o - | tar xzf -
      - name: Build x86 natives
        if: steps.cache-natives.outputs.cache-hit != 'true'
        run: |
          chmod +x gradlew
          export PATH="$PATH:$(pwd)/x86_64-linux-musl-cross/bin"
          ./gradlew buildLinuxGlibc32 buildLinuxGlibc64 buildLinuxMusl64
      - name: Install ARM compilers
        if: steps.cache-natives.outputs.cache-hit != 'true'
        run: |
          # installing these two breaks i386 compilation
          # https://bugs.launchpad.net/ubuntu/+source/gcc-defaults/+bug/1300211
          sudo apt install g++-arm-linux-gnueabihf
          sudo apt install g++-aarch64-linux-gnu
          curl -sL https://github.com/natanbc/actions-binaries/releases/download/1/aarch64-linux-musl-cross.tgz -o - | tar xzf -
      - name: Build ARM natives
        if: steps.cache-natives.outputs.cache-hit != 'true'
        run: |
          chmod +x gradlew
          export PATH="$PATH:$(pwd)/aarch64-linux-musl-cross/bin"
          ./gradlew buildLinuxGlibcArm buildLinuxGlibcAarch64 buildLinuxMuslAarch64
      - uses: actions/upload-artifact@v2
        with:
          name: linux-natives
          path: src/main/resources/natives/*
  windows-natives:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache natives
        uses: actions/cache@v2
        id: cache-natives
        with:
          path: |
            src/main/resources/natives/win-x86
            src/main/resources/natives/win-x86-64
          key: win-${{ hashFiles('feature-detector/**') }}
      - name: Set up JDK
        uses: actions/setup-java@v1
        if: steps.cache-natives.outputs.cache-hit != 'true'
        with:
          java-version: 15
      - name: Build natives
        if: steps.cache-natives.outputs.cache-hit != 'true'
        run: |
          .\gradlew.bat buildWin
      - uses: actions/upload-artifact@v2
        with:
          name: windows-natives
          path: src/main/resources/natives/*
  build:
    needs: [windows-natives, linux-natives, mac-natives]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: mkdir -p src/main/resources/natives
      - uses: actions/download-artifact@v2
        with:
          name: linux-natives
          path: src/main/resources/natives/
      - uses: actions/download-artifact@v2
        with:
          name: windows-natives
          path: src/main/resources/natives/
      - uses: actions/download-artifact@v2
        with:
          name: mac-natives
          path: src/main/resources/natives/
      - name: Compile java
        run: |
          chmod +x gradlew
          # this builds the java code without building the natives
          ./gradlew publishToMavenLocal
      - uses: actions/upload-artifact@v2
        with:
          name: jar
          path: build/libs/*.jar
      - name: Maven upload
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          export TAG="$(echo $GITHUB_REF | grep -q refs/tags && echo ${GITHUB_REF/refs\/tags\/} || echo '')"
          if [ "$TAG" != "" ]; then
            ./gradlew publish -PmavenUsername=$MAVENUSERNAME -PmavenPassword=$MAVENPASSWORD -Pversion=$TAG
          fi
        env:
          MAVENUSERNAME: ${{ secrets.MAVENUSERNAME }}
          MAVENPASSWORD: ${{ env.MAVENPASSWORD }}